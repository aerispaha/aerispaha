<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://www.adamerispaha.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.adamerispaha.com/" rel="alternate" type="text/html" /><updated>2021-01-03T01:35:18-05:00</updated><id>https://www.adamerispaha.com/feed.xml</id><title type="html">Adam Erispaha</title><subtitle>Civil/environmental engineer, loves charts, data, urban hydrology, and Python</subtitle><author><name>Adam Erispaha</name></author><entry><title type="html">Unjust power structures will ignore calls for change if we let them</title><link href="https://www.adamerispaha.com/2020/06/06/unjust-power-structures-ignore-calls-for-change-if-we-let-them/" rel="alternate" type="text/html" title="Unjust power structures will ignore calls for change if we let them" /><published>2020-06-06T00:00:00-04:00</published><updated>2020-06-06T00:00:00-04:00</updated><id>https://www.adamerispaha.com/2020/06/06/unjust-power-structures-ignore-calls-for-change-if-we-let-them</id><content type="html" xml:base="https://www.adamerispaha.com/2020/06/06/unjust-power-structures-ignore-calls-for-change-if-we-let-them/">&lt;p&gt;Like most people, I’d prefer to see our communities come together, make things, learn, build, enjoy art, and coexist in harmony with each other and nature. But we obviously aren’t there yet.&lt;/p&gt;

&lt;p&gt;Instead we have a reality in which &lt;a href=&quot;https://americansfortaxfairness.org/issue/tale-two-crises-billionaires-gain-workers-feel-pandemic-pain/&quot;&gt;American billionaires increased their wealth by $434B&lt;/a&gt; while the rest of us have struggled to survive a global pandemic and economic depression. Where &lt;a href=&quot;https://www.washingtonpost.com/graphics/investigations/police-shootings-database/&quot;&gt;1000 people each year are killed&lt;/a&gt; by increasingly militarized police forces, where black people are killed while sleeping in their homes, jogging, driving.&lt;/p&gt;

&lt;h3 id=&quot;power-asymmetry-and-violence&quot;&gt;Power Asymmetry and Violence&lt;/h3&gt;
&lt;p&gt;The murder of George Floyd set off a cascade of demonstrations spawning uprisings in every state in the US and in many countries around the world in the spring of 2020. The unrest renewed a discussion about the morality and efficacy of the tactics used by people in the streets:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Isn’t property destruction bad?&lt;/li&gt;
  &lt;li&gt;Isn’t violence bad?&lt;/li&gt;
  &lt;li&gt;Why are they destroying their cities?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Setting aside the problems with these questions, I think most people would agree that, in a vacuum, person A inflicting harm on person B is immoral.&lt;/p&gt;

&lt;p&gt;But, in the real word, we have to consider the mountains of inequality between actors: some have more wealth than entire nations, some have ancestry from centuries of chattel slavery, some are killed by agents of the state, some &lt;a href=&quot;https://theintercept.com/2020/04/01/philadelphia-hahnemann-hospital-joel-freedman/&quot;&gt;profit by closing community hospitals&lt;/a&gt;, some have legal teams, some can’t post bail, some can’t afford insulin, some poison the air that others breath, some write laws, some can’t vote, some work from home, some are essential workers, some suffer under broad systemic racism, others benefit from it.&lt;/p&gt;

&lt;p&gt;This power asymmetry, in my view, is what matters most when we think about what tactics are strategic and moral toward the goal of achieving positive change.&lt;/p&gt;

&lt;p&gt;First, let’s assume that the behavior of the system, with respect to power, follows a couple rules:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;agents with power benefit from the status quo and by squeezing more power out of the system&lt;/li&gt;
  &lt;li&gt;agents with power don’t voluntarily relinquish power&lt;/li&gt;
  &lt;li&gt;money is power&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given this, if demands on an unjust power structure can be ignored, they will be. Gains for regular people happen when their demands and actions can’t be ignored by the status quo and established power. This is why direct action that threatens, inflicts harm, costs, or at least inconveniences our opponents works. This is why it is effective to block traffic and shut down oil pipeline worksites. It stops business-as-usual, demands attention, and increases negotiating power.&lt;/p&gt;

&lt;p&gt;I think much of the vandalism, broken windows, burned police stations, and looting is the manifestation of valid disgust and anger at an unjust system. Regardless of how valid or logical a human response one considers these uprisings, the fact that they are not under control by the beneficiaries of the status quo is what makes them potent and effective.&lt;/p&gt;

&lt;h3 id=&quot;peaceful-protest&quot;&gt;Peaceful Protest&lt;/h3&gt;
&lt;p&gt;Imagine a peaceful march that poses no inconvenience to those standing in the way of police reform. One that obeys the curfews imposed by the police, that stays on the sidewalks, and doesn’t affect the rush hour traffic (one that offers a Pepsi to a cop). Organizers can try to control the narrative and hope that the media reports sympathetically, that the police might be interested and open to listening to the activists’ speeches. Maybe the police chief will see the signatures on the petition and reevaluate their life’s work. Maybe its possible to appeal to the morality of officials to find legislative solutions.&lt;/p&gt;

&lt;p&gt;I’m not suggesting that there aren’t alternatives to burning police cars and looting Walmarts. There are. But I do think we’ve waited long enough for demands to be heard and for police to stop murdering black people.&lt;/p&gt;

&lt;h3 id=&quot;our-opponents-are-ruthless&quot;&gt;Our Opponents are Ruthless&lt;/h3&gt;
&lt;p&gt;If the tactics taken by the 2020 uprising seem too violent, consider the tactics used by our opponents: tear gas, rubber bullets, bullets, tanks, drones, mass surveillance, from Jim Crow, to the assassination of Fred Hampton, Martin Luther King Jr., lynchings past and present. Consider the lengths Charles Koch was willing to go to dismantle labor and environmental protections, and the ruthlessness of Jeff Bezos, the dishonesty of big tobacco, Exxon Mobile. Our opponents are not sitting idly by, patiently waiting to cast their ballot every 4 years. They are hardcore. They are radical activists fighting violently for power and self-preservation.&lt;/p&gt;

&lt;p&gt;We’ve been in an unfair fight for decades - unless we recognize that and fight back we are going to continue to lose.&lt;/p&gt;</content><author><name>Adam Erispaha</name></author><category term="Politics" /><summary type="html">Like most people, I’d prefer to see our communities come together, make things, learn, build, enjoy art, and coexist in harmony with each other and nature. But we obviously aren’t there yet.</summary></entry><entry><title type="html">Forgot how to update my blog for 2 years</title><link href="https://www.adamerispaha.com/2020/05/02/forgot-how-to-update-my-blog-for-2-years/" rel="alternate" type="text/html" title="Forgot how to update my blog for 2 years" /><published>2020-05-02T00:00:00-04:00</published><updated>2020-05-02T00:00:00-04:00</updated><id>https://www.adamerispaha.com/2020/05/02/forgot-how-to-update-my-blog-for-2-years</id><content type="html" xml:base="https://www.adamerispaha.com/2020/05/02/forgot-how-to-update-my-blog-for-2-years/">&lt;p&gt;I’ve tried several times to develop a writing habit with varying levels of
success. But, after about a full year slump, I again forgot how to update my
blogo.&lt;/p&gt;

&lt;p&gt;Over the years, my writing has lived in various types of infrastructure
(Myspace, Wordpress, notepad++, etc.) always tracking along with my evolving
coding tastes. In my PHP phase I was trying to blog with Laraval, for example.
The second-most recent iteration was the magic unicorn of Django, tracking
along with my ongoing love for Python.&lt;/p&gt;

&lt;h3 id=&quot;keep-it-simple&quot;&gt;Keep it simple&lt;/h3&gt;
&lt;p&gt;Somewhere along the line I grew frustrated with mental overhead necessary to
remember how to use Django anytime I felt inspired to write. This was exacerbated
by my writing inconsistency.&lt;/p&gt;

&lt;p&gt;So, I had the brilliant idea to make things extremely simple: write in
markdown and host with GitHub pages. I use both tools daily, so what could
go wrong?&lt;/p&gt;

&lt;p&gt;Then after many moons I forgot that I migrated my blog to this brilliant, simple
system. Over the next two years I was left intermittently trying to remember how
to log into the Django admin panel in an Django app that didn’t exist.&lt;/p&gt;

&lt;p&gt;Yay!&lt;/p&gt;</content><author><name>Adam Erispaha</name></author><category term="Personal" /><summary type="html">I’ve tried several times to develop a writing habit with varying levels of success. But, after about a full year slump, I again forgot how to update my blogo.</summary></entry><entry><title type="html">Measuring media coverage dynamics with MongoDB and Python</title><link href="https://www.adamerispaha.com/2017/07/22/media-coverage-dynamics-mongodb-python/" rel="alternate" type="text/html" title="Measuring media coverage dynamics with MongoDB and Python" /><published>2017-07-22T00:00:00-04:00</published><updated>2017-07-22T00:00:00-04:00</updated><id>https://www.adamerispaha.com/2017/07/22/media-coverage-dynamics-mongodb-python</id><content type="html" xml:base="https://www.adamerispaha.com/2017/07/22/media-coverage-dynamics-mongodb-python/">&lt;p&gt;In a &lt;a href=&quot;/2017/07/09/scraping-headlines-with-cronjobs-python-and-mongodb/&quot;&gt;recent post&lt;/a&gt;, I outlined a process that aims to capture the dynamics of the media landscape by taking a snapshot of news headlines every 15 minutes. The database has been quietly growing for about a month now, receiving data scraped from 19 media organizations’ RSS feeds while the world goes about its business. Even though we only have a sliver of headlines history to work with (about 30 days), we’re ready for some analysis.&lt;/p&gt;

&lt;p&gt;Let’s start by taking a look at an example document in the MongoDB database representing a snapshot of USA Today’s RSS feed on June 12, 2017:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ObjectId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;593e13134a5ac4327d88619c&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;832000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;usa_today&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;stories&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Dear Evan Hansen' wins six Tony Awards, including best musical&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Penguins have become NHL's newest dynasty&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;First lady Melania Trump, son Barron officially move into the White House&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;E3 2017: The 5 biggest reveals during the Xbox event&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Penguins repeat as Stanley Cup champions&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Homophobic slur aimed at U.S. goalkeeper Brad Guzan by Mexican fans at World Cup qualifier&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Ben Platt's reaction is the best GIF of the Tonys Awards&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Puerto Ricans parade in New York, back statehood&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Delta ends theater company sponsorship over Trump look-alike killing scene&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;U.S. earns rare tie vs. Mexico in World Cup qualifier at Estadio Azteca&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Within the document, we see a list of stories (i.e. news headlines) alongside the source (USA Today) and the datetime when the headlines were observed. As noted above, these snapshots are created every 15 minutes with data from the RSS feeds of 19 media organizations (&lt;a href=&quot;/2017/07/09/scraping-headlines-with-cronjobs-python-and-mongodb/&quot;&gt;see the list of feeds here&lt;/a&gt;). At the time of writing, there are 29,925 of these snapshots in the database with headlines starting on June 12, 2017 (note: I lost all data between June 13 and July 5).&lt;/p&gt;

&lt;h2 id=&quot;querying-headlines-with-pymongo-and-pandas&quot;&gt;Querying Headlines with PyMongo and Pandas&lt;/h2&gt;
&lt;p&gt;In order to interact with the data, we construct a function, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;query_rss_stories()&lt;/code&gt; that wraps up the process of connecting to MongoDB, querying using the &lt;a href=&quot;https://docs.mongodb.com/manual/aggregation/&quot;&gt;aggregation framework&lt;/a&gt; and regex, and organizing the results in a Pandas dataframe:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;query_rss_stories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#connect to db
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MongoClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;news&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;headlines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headlines&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#query the database, create dataframe
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;pipeline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$unwind&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$stories&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$match&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stories&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'$regex'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$project&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;datetime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;stories&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;source&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#unpack the cursor into a Dataframe
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aggregate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#round the rss query datetimes to 15mins
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'15min'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;raw_stories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'datetime'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raw_stories&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As an example, we’ll search for stories related to China:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;stories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_rss_stories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'China'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;style&gt;
    .dataframe thead tr:only-child th {
        text-align: right;
    }

    .dataframe thead th {
        text-align: left;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;source&lt;/th&gt;
      &lt;th&gt;stories&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;datetime&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2017-07-20 14:00:00&lt;/th&gt;
      &lt;td&gt;breitbart&lt;/td&gt;
      &lt;td&gt;Report: U.S. Bans Prompt American Allies to Bu...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2017-07-14 05:45:00&lt;/th&gt;
      &lt;td&gt;upi&lt;/td&gt;
      &lt;td&gt;India rejects China's offer to mediate Kashmir...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2017-07-13 00:15:00&lt;/th&gt;
      &lt;td&gt;wsj_opinion&lt;/td&gt;
      &lt;td&gt;How to Squeeze China&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2017-07-07 19:00:00&lt;/th&gt;
      &lt;td&gt;abc&lt;/td&gt;
      &lt;td&gt;US bombers fly over East and South China Seas&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2017-07-12 19:15:00&lt;/th&gt;
      &lt;td&gt;reuters&lt;/td&gt;
      &lt;td&gt;China dissident Liu's condition critical, brea...&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stories&lt;/code&gt; dataframe contains all headlines related to China from all of the new sources starting around July 6. For every hour that a headline is live on a particular RSS feed, four entries will be found in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stories&lt;/code&gt; dataframe (since the snapshots are taken at 15-minute intervals).&lt;/p&gt;

&lt;p&gt;Next, we unstack the data and count the number of China-related headlines found at each time step:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_rss_timeseries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'1h'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#unstack sources and create headline_count time series
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headline_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'datetime'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'source'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unstack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_level_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#set time step
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Grouper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'datetime'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#daily time series of China headline counts
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_rss_timeseries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'1d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To visualize, we create a stacked bar chart of China-related headline counts across all media organizations:
&lt;img src=&quot;https://www.adamerispaha.com/assets/img/china-headlines-count.png&quot; alt=&quot;China-Headlines-Count&quot; /&gt;
Here, we can see that each day between July 7 and July 23, 2017, between 7 and 17 China-related headlines were found from 18 media sources. Sort of interesting, but what about a more volatile topic?&lt;/p&gt;

&lt;p&gt;Let’s take a look at the volume of headlines related to “Trump Jr”. We’ll also increase the resolution thats visualized so we can see how the media coverage evolves each hour:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jr_stories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_rss_stories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Trump Jr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;jr_ts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_rss_timeseries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jr_stories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'1h'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://www.adamerispaha.com/assets/img/trump-jr-headlines-count.png&quot; alt=&quot;Trump-Junior-Headlines-Count&quot; /&gt;
Now we’re seeing a major event play out.&lt;/p&gt;

&lt;h2 id=&quot;interpretations-and-future-work&quot;&gt;Interpretations and Future Work&lt;/h2&gt;
&lt;p&gt;Recording periodic snapshots allows us to observe how the media’s interest in a particular topic changes over time. For example, a topic that’s discussed simultaneously in multiple articles by many media organizations must be especially important at a given point in time. Similarly, an issue that is featured throughout the RSS feeds for many days are likely more significant than stories that come and go within a few hours. One can think of these dynamics like the intensity and duration of rainfall events: is there are drizzle or a deluge of articles, and for how long are the stories pattering down?&lt;/p&gt;

&lt;p&gt;I’ve only scratched the surface, but there is a lot more I’d like to investigate now that I have a handle on the data. Future Work:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;measure the proportion of attention given to particular topics&lt;/li&gt;
  &lt;li&gt;quantify the differences in reporting between media organizations&lt;/li&gt;
  &lt;li&gt;compare media attention to objectively important and quantifiable topics:
    &lt;ul&gt;
      &lt;li&gt;casualties of war&lt;/li&gt;
      &lt;li&gt;bombings, shootings&lt;/li&gt;
      &lt;li&gt;environmental disasters&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;natural language analysis
    &lt;ul&gt;
      &lt;li&gt;differences in sentiment on particular topics&lt;/li&gt;
      &lt;li&gt;differences in sentiment between sources&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;identify any patterns between left- and right-leaning sources&lt;/li&gt;
  &lt;li&gt;host data on public server and/or &lt;a href=&quot;https://data.world/&quot;&gt;data.world&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Adam Erispaha</name></author><category term="Tech" /><category term="Politics" /><summary type="html">In a recent post, I outlined a process that aims to capture the dynamics of the media landscape by taking a snapshot of news headlines every 15 minutes. The database has been quietly growing for about a month now, receiving data scraped from 19 media organizations’ RSS feeds while the world goes about its business. Even though we only have a sliver of headlines history to work with (about 30 days), we’re ready for some analysis.</summary></entry><entry><title type="html">Scraping headlines with cron jobs, Python, and MongoDB</title><link href="https://www.adamerispaha.com/2017/07/09/scraping-headlines-with-cronjobs-python-and-mongodb/" rel="alternate" type="text/html" title="Scraping headlines with cron jobs, Python, and MongoDB" /><published>2017-07-09T00:00:00-04:00</published><updated>2017-07-09T00:00:00-04:00</updated><id>https://www.adamerispaha.com/2017/07/09/scraping-headlines-with-cronjobs-python-and-mongodb</id><content type="html" xml:base="https://www.adamerispaha.com/2017/07/09/scraping-headlines-with-cronjobs-python-and-mongodb/">&lt;p&gt;I’ve been interested in measuring bias in media coverage for quite a while. The discourse before and after the 2016 election has forced a lot of us (definitely me) into an anxiety spiral, trying to keep up and maintain sanity under the weight of our 24-hour news culture. To make myself feel better, I recently set up a cron job on a server that pulls the RSS feeds of as many news sources as I could think of, and stores the headlines in a MongoDB database.&lt;/p&gt;

&lt;p&gt;To set up the cron job, I edited my crontab on my Ubuntu server by typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crontab -e&lt;/code&gt;. In the crontab I added the following line:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-crontab&quot;&gt;*/15 * * * * /home/news_agg/scrape_news.py &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This basically tells the server to run a script located at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/news_agg/scrape_news.py&lt;/code&gt; every 15 minutes. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;/dev/null 2&amp;gt;&amp;amp;1&lt;/code&gt; part prevents the cron from writing a message to a log each time it runs.&lt;/p&gt;

&lt;p&gt;The news scraping Python script that gets executed every 15 minutes is fairly straightforward. First, &lt;a href=&quot;https://github.com/kurtmckee/feedparser&quot;&gt;feedparser&lt;/a&gt; (for parsing RSS feeds), &lt;a href=&quot;https://api.mongodb.com/python/current/&quot;&gt;PyMongo&lt;/a&gt; (Python wrapper for workin with MongoDB), and the datetime packages are imported and a dictionary of RSS feeds is constructed:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env python
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;feedparser&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pymongo&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#create a dictionary of rss feeds
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nyt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://feeds.foxnews.com/foxnews/most-popular'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wsj_opinion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://www.wsj.com/xml/rss/3_7041.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wsj_business&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://www.wsj.com/xml/rss/3_7014.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wsj_world&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://www.wsj.com/xml/rss/3_7085.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wapo_national&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://feeds.washingtonpost.com/rss/national'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cnn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://rss.cnn.com/rss/cnn_topstories.rss'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cnn_us&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://rss.cnn.com/rss/cnn_us.rss'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;breitbart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://feeds.feedburner.com/breitbart'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cnbc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://www.cnbc.com/id/100003114/device/rss/rss.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;abc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://feeds.abcnews.com/abcnews/topstories'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bbc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://feeds.bbci.co.uk/news/rss.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wired&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://www.wired.com/feed/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;upi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://rss.upi.com/news/top_news.rss'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reuters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://feeds.reuters.com/reuters/topNews'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;usa_today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://rssfeeds.usatoday.com/usatoday-NewsTopStories'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://hosted2.ap.org/atom/APDEFAULT/3d281c11a96b4ad082fe88aa0db04305'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;npr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://www.npr.org/rss/rss.php?id=1001'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;democracy_now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://www.democracynow.org/democracynow.rss'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From there, we loop through each of the RSS urls, pull out the title and source of each article, and store everything in a temporary &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data&lt;/code&gt; list of dicts. That list then gets written to a MongoDB collection called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;headlines&lt;/code&gt; in a database called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;news&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#grab the current time
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utcnow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iteritems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;rss_parsed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feedparser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;art&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;art&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rss_parsed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'items'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#create dict for each news source
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'source'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'stories'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'datetime'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Access the 'headlines' collection in the 'news' database
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pymongo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MongoClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headlines&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#insert the data
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;insert_many&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;With the crontab in action, this script is run every 15 minutes which means we have a periodic snap shot of all of the new source’s RSS feeds. This effectively creates a times series of news headlines at a 15-minute time step.&lt;/p&gt;

&lt;p&gt;This script was kicked off on June 12, 2017 (about 30 days before the day of this post). Since then, I’ve only scratched the surface with analysis. I’ve also realized that my Mongo document structure is probably pretty awkward, but, hey, it works. As an example, I set up a query to count the amount of times a particular topic was found in each  new source’s RSS feed:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;headlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aggregate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;$unwind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$stories&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;$match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Yemen/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;$group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$source&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;stories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;$addToSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$stories&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;$sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pretty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here, I’ve queried the data for headlines including “Yemen”, which returned the following:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;nyt&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;stories&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Cholera Spreads as War and Poverty Batter Yemen&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
	&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;87&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;democracy_now&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;stories&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Cholera Death Toll Tops 859 in War-Torn Yemen as U.S.-Backed Saudi Assault Continues&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
	&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;fox&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;stories&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Yemenis rally in support for secession of country's south&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Naval coalition steps up patrols around Yemen after attacks&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
	&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This shows that, between June 12 and July 9, 2017, our script found that the RSS feeds of the New York Times, Democracy Now! and Fox News included stories about the war in Yemen 87, 48, and 2 times, respectively. Assuming each RSS feed snap shot was taken at 15 minute intervals, this suggests Yemen coverage could be found on NYT’s feed for almost 22 hours while lasting just 30 minutes on Fox’s feed.&lt;/p&gt;

&lt;p&gt;The same query also suggests that aggregate RSS-coverage of Barron and Melania Trump moving into the Whitehouse lasted more than 50 hours across each news source.&lt;/p&gt;</content><author><name>Adam Erispaha</name></author><category term="Tech" /><category term="Politics" /><summary type="html">I’ve been interested in measuring bias in media coverage for quite a while. The discourse before and after the 2016 election has forced a lot of us (definitely me) into an anxiety spiral, trying to keep up and maintain sanity under the weight of our 24-hour news culture. To make myself feel better, I recently set up a cron job on a server that pulls the RSS feeds of as many news sources as I could think of, and stores the headlines in a MongoDB database.</summary></entry><entry><title type="html">Reading Shapefiles into Pandas Dataframes</title><link href="https://www.adamerispaha.com/2017/01/24/reading-shapefiles-into-pandas-dataframes/" rel="alternate" type="text/html" title="Reading Shapefiles into Pandas Dataframes" /><published>2017-01-24T00:00:00-05:00</published><updated>2017-01-24T00:00:00-05:00</updated><id>https://www.adamerispaha.com/2017/01/24/reading-shapefiles-into-pandas-dataframes</id><content type="html" xml:base="https://www.adamerispaha.com/2017/01/24/reading-shapefiles-into-pandas-dataframes/">&lt;p&gt;I’ve just about had it up to here with and ArcMap and arcpy. Today I begin my quest to free myself from ever needing to rely on ESRI for spatial analysis and mapping.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://geopandas.org/&quot;&gt;Geopandas&lt;/a&gt; seems great, but I have had a lot of trouble getting it installed and have therefore been hesitant to rely on it in any package I create. Instead, I’ve used the following snippet to read a shapefile into a Pandas dataframe for quick analysis. You will need the &lt;a href=&quot;https://pypi.python.org/pypi/pyshp&quot;&gt;pyshp&lt;/a&gt; package and &lt;a href=&quot;http://pandas.pydata.org/&quot;&gt;Pandas&lt;/a&gt;. If you don’t have these, install them via pip and you’re ready to go:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;shapefile&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#the pyshp module
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#read file, parse out the records and shapes
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shapefile_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'path/to/shapefile/'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapefile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shapefile_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#grab the shapefile's field names (omit the first psuedo field)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;records&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;shps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;points&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#write the records into a dataframe
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shapefile_dataframe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#add the coordinate data to a column called &quot;coords&quot;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shapefile_dataframe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapefile_dataframe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coords&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shapefile_dataframe&lt;/code&gt; has all of the input shapefile’s records and geometry data.&lt;/p&gt;</content><author><name>Adam Erispaha</name></author><category term="Tech" /><summary type="html">I’ve just about had it up to here with and ArcMap and arcpy. Today I begin my quest to free myself from ever needing to rely on ESRI for spatial analysis and mapping.</summary></entry><entry><title type="html">Senate Voting Partisanship in 2014</title><link href="https://www.adamerispaha.com/2017/01/11/us-senate-voting-partisanship-2014/" rel="alternate" type="text/html" title="Senate Voting Partisanship in 2014" /><published>2017-01-11T00:00:00-05:00</published><updated>2017-01-11T00:00:00-05:00</updated><id>https://www.adamerispaha.com/2017/01/11/us-senate-voting-partisanship-2014</id><content type="html" xml:base="https://www.adamerispaha.com/2017/01/11/us-senate-voting-partisanship-2014/">&lt;p&gt;Inspired by  this &lt;a href=&quot;https://gist.github.com/rlucioni/8bdb1092579041ce739c&quot;&gt;Gist&lt;/a&gt;&lt;/p&gt;

&lt;div id=&quot;python-plot&quot; class=&quot;responsive-plot&quot;&gt;&lt;/div&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
  //pull in data from python
  python_data ={&quot;layout&quot;: {&quot;yaxis&quot;: {&quot;range&quot;: [-100, 100], &quot;title&quot;: &quot;Votes (Nays Indicated by Negative Numbers)&quot;}, &quot;paper_bgcolor&quot;: &quot;rgba(245, 246, 249, 1)&quot;, &quot;plot_bgcolor&quot;: &quot;rgba(245, 246, 249, 1)&quot;, &quot;title&quot;: &quot;Partisanship in the 2014 US Senate&quot;, &quot;barmode&quot;: &quot;relative&quot;, &quot;yaxis2&quot;: {&quot;range&quot;: [0, 1], &quot;title&quot;: &quot;Bipartisan Score&quot;, &quot;overlaying&quot;: &quot;y&quot;, &quot;dtick&quot;: 0.25, &quot;side&quot;: &quot;right&quot;}, &quot;legend&quot;: {&quot;y&quot;: 1, &quot;x&quot;: 1.1}}, &quot;data&quot;: [{&quot;marker&quot;: {&quot;color&quot;: &quot;rgba(55, 128, 191, 0.4)&quot;}, &quot;y&quot;: [53, 0, 53, 52, 52, 0, 52, 52, 52, 1, 51, 51, 1, 1, 52, 53, 53, 50, 52, 50, 52, 50, 51, 51, 50, 50, 52, 52, 50, 52, 52, 51, 51, 52, 52, 52, 52, 49, 51, 52, 51, 53, 49, 51, 51, 49, 51, 50, 51, 51, 51, 52, 52, 51, 51, 50, 1, 49, 52, 4, 49, 53, 50, 52, 47, 53, 51, 49, 51, 49, 49, 48, 51, 50, 50, 53, 51, 48, 50, 53, 51, 50, 50, 48, 52, 48, 1, 53, 52, 45, 51, 48, 51, 51, 51, 53, 50, 50, 51, 53, 50, 50, 50, 52, 51, 52, 51, 0, 52, 50, 51, 0, 53, 51, 49, 51, 51, 53, 51, 53, 53, 50, 45, 47, 43, 49, 52, 52, 46, 49, 23, 53, 51, 49, 2, 52, 50, 51, 50, 51, 44, 53, 46, 52, 53, 53, 53, 52, 53, 52, 51, 53, 53, 52, 51, 52, 52, 53, 53, 51, 52, 52, 51, 53, 53, 52, 52, 52, 51, 52, 52, 52, 49, 53, 49, 53, 50, 51, 53, 52, 52, 53, 53, 49, 51, 51, 52, 52, 52, 52, 51, 52, 52, 52, 53, 53, 53, 51, 51, 52, 52, 53, 52, 50, 51, 50, 52, 50, 49, 49, 50, 49], &quot;type&quot;: &quot;bar&quot;, &quot;name&quot;: &quot;Democrat Yeas&quot;, &quot;x&quot;: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210]}, {&quot;marker&quot;: {&quot;color&quot;: &quot;rgba(219, 64, 82, 0.4)&quot;}, &quot;y&quot;: [0, 45, 0, 0, 0, 44, 0, 0, 1, 44, 0, 0, 44, 44, 1, 2, 2, 0, 2, 0, 2, 0, 1, 1, 0, 0, 2, 2, 0, 2, 2, 1, 1, 2, 2, 2, 2, 0, 2, 3, 2, 4, 0, 2, 2, 0, 2, 1, 2, 2, 2, 4, 4, 3, 3, 2, 41, 1, 4, 44, 1, 5, 2, 4, 0, 6, 4, 2, 4, 2, 2, 1, 4, 3, 3, 6, 4, 1, 3, 7, 5, 4, 4, 2, 6, 2, 39, 7, 6, 0, 6, 3, 6, 6, 7, 9, 6, 6, 7, 10, 7, 7, 7, 9, 9, 10, 9, 34, 10, 8, 9, 33, 12, 11, 11, 14, 14, 16, 15, 17, 17, 15, 11, 15, 11, 17, 21, 21, 16, 19, 45, 24, 22, 21, 22, 24, 23, 24, 26, 28, 22, 31, 24, 32, 35, 36, 37, 36, 38, 37, 38, 40, 40, 39, 38, 40, 40, 41, 41, 39, 41, 41, 40, 42, 42, 41, 41, 41, 40, 41, 41, 42, 39, 43, 39, 43, 40, 41, 44, 43, 43, 44, 44, 40, 42, 42, 43, 44, 44, 44, 43, 44, 44, 44, 45, 45, 45, 43, 43, 44, 44, 45, 44, 43, 44, 43, 45, 43, 43, 43, 44, 43], &quot;type&quot;: &quot;bar&quot;, &quot;name&quot;: &quot;Republican Yeas&quot;, &quot;x&quot;: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210]}, {&quot;marker&quot;: {&quot;color&quot;: &quot;rgba(55, 128, 191, 0.4)&quot;}, &quot;y&quot;: [0, -53, 0, 0, 0, -50, -1, 0, 0, -50, 0, -2, -49, -50, -1, 0, 0, -3, 0, 0, 0, -2, 0, 0, -1, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1, 0, -51, 0, -1, -48, 0, 0, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -3, 0, 0, -2, 0, 0, 0, 0, -52, 0, 0, -8, 0, 0, 0, -2, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -52, 0, 0, 0, -51, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, -6, 0, -30, 0, 0, -2, -50, 0, -1, 0, 0, 0, -9, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], &quot;type&quot;: &quot;bar&quot;, &quot;name&quot;: &quot;Democrat Nays&quot;, &quot;x&quot;: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210]}, {&quot;marker&quot;: {&quot;color&quot;: &quot;rgba(219, 64, 82, 0.4)&quot;}, &quot;y&quot;: [-43, 0, -43, -44, -42, 0, -42, -43, -43, 0, -41, -43, 0, 0, -42, -43, -41, -45, -43, -42, -43, -41, -40, -38, -43, -43, -41, -43, -43, -41, -41, -41, -43, -43, -42, -42, -42, -42, -37, -40, -43, -41, -42, -37, -41, -42, -37, -39, -38, -37, -42, -39, -41, -39, -37, -42, -1, -32, -39, -1, -41, -36, -40, -34, -42, -35, -39, -31, -37, -30, -31, -37, -37, -35, -41, -38, -39, -40, -42, -35, -36, -41, -40, -32, -37, -33, -4, -37, -38, -44, -35, -34, -38, -39, -34, -35, -39, -35, -37, -34, -35, -35, -37, -34, -35, -34, -35, -11, -35, -35, -34, -10, -31, -32, -30, -28, -31, -28, -27, -26, -26, -29, -26, -23, -34, -23, -20, -21, -29, -24, 0, -20, -19, -20, -23, -17, -22, -19, -17, -15, -23, -14, -19, -13, -8, -7, -6, -3, -6, -2, -7, -4, -3, -5, 0, 0, 0, -2, -3, -2, 0, 0, -3, -1, 0, -2, -3, -1, -1, -4, 0, 0, -5, -2, 0, 0, -4, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], &quot;type&quot;: &quot;bar&quot;, &quot;name&quot;: &quot;Republican Nays&quot;, &quot;x&quot;: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210]}, {&quot;marker&quot;: {&quot;color&quot;: &quot;rgba(55, 128, 191, 0.2)&quot;}, &quot;y&quot;: [0, 0, 0, -1, -1, -3, 0, -1, -1, -2, -2, 0, -3, -2, 0, 0, 0, 0, -1, -3, -1, -1, -2, -2, -2, -2, -1, -1, -2, -1, -1, -1, -2, -1, -1, -1, -1, -3, -2, -1, -2, 0, -4, -2, -2, -4, -2, -2, -2, -2, -2, -1, -1, -2, -1, -3, -1, -4, 0, -1, -4, 0, -3, -1, -2, 0, -2, -4, -2, -4, -4, -5, -2, -2, -3, 0, -2, -5, 0, 0, -2, -1, -3, -5, -1, -5, 0, 0, -1, 0, -2, -5, -2, 0, -2, 0, 0, -3, -2, 0, -3, -3, -3, -1, -2, -1, -2, -1, -1, -3, -2, -2, 0, -2, -4, -2, -1, 0, -2, 0, 0, -3, -8, -6, 0, -4, -1, -1, -1, -4, 0, 0, -2, -2, -1, -1, -2, -2, -3, -2, 0, 0, -4, -1, 0, 0, 0, -1, 0, -1, -2, 0, 0, -1, -2, 0, -1, 0, 0, -2, -1, -1, -2, 0, 0, 0, -1, -1, -2, -1, -1, 0, -4, 0, -4, 0, -3, -2, 0, -1, -1, 0, 0, -4, -2, -2, -1, -1, -1, -1, -2, -1, -1, -1, 0, 0, 0, -2, -2, -1, -1, 0, -1, -3, -2, -3, -1, -3, -4, -4, -3, -4], &quot;type&quot;: &quot;bar&quot;, &quot;name&quot;: &quot;Democrat Abstains&quot;, &quot;x&quot;: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210]}, {&quot;marker&quot;: {&quot;color&quot;: &quot;rgba(219, 64, 82, 0.2)&quot;}, &quot;y&quot;: [-2, 0, -2, -1, -3, -1, -3, -2, -1, -1, -4, -2, -1, -1, -2, 0, -1, 0, 0, -3, 0, -4, -4, -6, -2, -2, -2, 0, -2, -2, -2, -3, -1, 0, -1, -1, 0, -3, -6, -2, 0, 0, -3, -6, -2, -3, -6, -5, -4, -5, 0, -2, 0, -3, -5, -1, -3, -12, -2, 0, -3, -4, -3, -6, -3, -4, -2, -12, -4, -13, -12, -7, -4, -7, -1, -1, -2, -4, 0, -3, -4, 0, -1, -11, -2, -10, -2, -1, -1, -1, -4, -8, -1, 0, -4, -1, 0, -4, -1, -1, -3, -3, -1, -2, -1, -1, -1, 0, 0, -2, -2, -2, -2, -2, -4, -3, 0, -1, -3, -2, -2, -1, -8, -7, 0, -5, -4, -3, 0, -2, 0, -1, -4, -4, 0, -4, 0, -2, -2, -2, 0, 0, -2, 0, -2, -2, -2, -6, -1, -6, 0, -1, -2, -1, -7, -5, -5, -2, -1, -4, -4, -4, -2, -2, -3, -2, -1, -3, -4, 0, -4, -3, -1, 0, -6, -2, -1, -4, -1, -2, -2, -1, 0, -5, -3, -3, -2, -1, -1, -1, -2, -1, -1, -1, 0, 0, 0, -2, -2, -1, -1, 0, -1, -2, -1, -2, 0, -2, -2, -2, -1, -2], &quot;type&quot;: &quot;bar&quot;, &quot;name&quot;: &quot;Republican Abstains&quot;, &quot;x&quot;: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210]}, {&quot;name&quot;: &quot;Blue Lean&quot;, &quot;yaxis&quot;: &quot;y2&quot;, &quot;y&quot;: [1.0, 0.0, 1.0, 0.98979591836734693, 0.98979591836734693, 0.01020408163265306, 0.98979591836734693, 0.98979591836734693, 0.97959183673469385, 0.020408163265306121, 0.97959183673469385, 0.97959183673469385, 0.020408163265306121, 0.020408163265306121, 0.97959183673469385, 0.97959183673469385, 0.97938144329896903, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96938775510204078, 0.96907216494845361, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95876288659793818, 0.95876288659793818, 0.95876288659793818, 0.94897959183673475, 0.94897959183673475, 0.94897959183673475, 0.94897959183673475, 0.94897959183673475, 0.051020408163265307, 0.94897959183673475, 0.94897959183673475, 0.051020408163265307, 0.94897959183673475, 0.94897959183673475, 0.94897959183673475, 0.94845360824742264, 0.94845360824742264, 0.93877551020408168, 0.93877551020408168, 0.93877551020408168, 0.93877551020408168, 0.93877551020408168, 0.93877551020408168, 0.93877551020408168, 0.93877551020408168, 0.93877551020408168, 0.93877551020408168, 0.93877551020408168, 0.93877551020408168, 0.93877551020408168, 0.93877551020408168, 0.9285714285714286, 0.9285714285714286, 0.9285714285714286, 0.9285714285714286, 0.9285714285714286, 0.9285714285714286, 0.9285714285714286, 0.071428571428571425, 0.9285714285714286, 0.9285714285714286, 0.91836734693877553, 0.91836734693877553, 0.91836734693877553, 0.91836734693877553, 0.91836734693877553, 0.90816326530612246, 0.90816326530612246, 0.90816326530612246, 0.90816326530612246, 0.90816326530612246, 0.89795918367346939, 0.89795918367346939, 0.89795918367346939, 0.89795918367346939, 0.89795918367346939, 0.88775510204081631, 0.88775510204081631, 0.88775510204081631, 0.11224489795918367, 0.88775510204081631, 0.88775510204081631, 0.88775510204081631, 0.12244897959183673, 0.87755102040816324, 0.86734693877551017, 0.84693877551020413, 0.83673469387755106, 0.83673469387755106, 0.83673469387755106, 0.82653061224489799, 0.82653061224489799, 0.82653061224489799, 0.81632653061224492, 0.80612244897959184, 0.7857142857142857, 0.7857142857142857, 0.7857142857142857, 0.77551020408163263, 0.77551020408163263, 0.76530612244897955, 0.76530612244897955, 0.23469387755102042, 0.75510204081632648, 0.75510204081632648, 0.74489795918367352, 0.25510204081632654, 0.74489795918367352, 0.73469387755102045, 0.73469387755102045, 0.70408163265306123, 0.69387755102040816, 0.68367346938775508, 0.68367346938775508, 0.68367346938775508, 0.66326530612244894, 0.6428571428571429, 0.63265306122448983, 0.62244897959183676, 0.62244897959183676, 0.61224489795918369, 0.61224489795918369, 0.59183673469387754, 0.59183673469387754, 0.59183673469387754, 0.59183673469387754, 0.59183673469387754, 0.58762886597938147, 0.58163265306122447, 0.58163265306122447, 0.58163265306122447, 0.58163265306122447, 0.5714285714285714, 0.5714285714285714, 0.5714285714285714, 0.5714285714285714, 0.5714285714285714, 0.5714285714285714, 0.5714285714285714, 0.5714285714285714, 0.5714285714285714, 0.5714285714285714, 0.5714285714285714, 0.5670103092783505, 0.56122448979591832, 0.56122448979591832, 0.56122448979591832, 0.56122448979591832, 0.56122448979591832, 0.56122448979591832, 0.55102040816326525, 0.55102040816326525, 0.55102040816326525, 0.55102040816326525, 0.55102040816326525, 0.55102040816326525, 0.55102040816326525, 0.55102040816326525, 0.55102040816326525, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.54081632653061229, 0.53061224489795922, 0.53061224489795922, 0.53061224489795922, 0.53061224489795922, 0.53061224489795922, 0.52040816326530615, 0.52040816326530615, 0.52040816326530615, 0.52040816326530615], &quot;mode&quot;: &quot;markers&quot;, &quot;marker&quot;: {&quot;color&quot;: &quot;rgba(55, 128, 191, 0.5)&quot;, &quot;size&quot;: 5}, &quot;x&quot;: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], &quot;type&quot;: &quot;scatter&quot;}, {&quot;name&quot;: &quot;Red Lean&quot;, &quot;yaxis&quot;: &quot;y2&quot;, &quot;y&quot;: [0.0, 1.0, 0.0, 0.01020408163265306, 0.01020408163265306, 0.98979591836734693, 0.01020408163265306, 0.01020408163265306, 0.020408163265306121, 0.97959183673469385, 0.020408163265306121, 0.020408163265306121, 0.97959183673469385, 0.97959183673469385, 0.020408163265306121, 0.020408163265306121, 0.020618556701030927, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030612244897959183, 0.030927835051546393, 0.040816326530612242, 0.040816326530612242, 0.040816326530612242, 0.040816326530612242, 0.040816326530612242, 0.040816326530612242, 0.040816326530612242, 0.040816326530612242, 0.040816326530612242, 0.040816326530612242, 0.040816326530612242, 0.041237113402061855, 0.041237113402061855, 0.041237113402061855, 0.051020408163265307, 0.051020408163265307, 0.051020408163265307, 0.051020408163265307, 0.051020408163265307, 0.94897959183673475, 0.051020408163265307, 0.051020408163265307, 0.94897959183673475, 0.051020408163265307, 0.051020408163265307, 0.051020408163265307, 0.051546391752577317, 0.051546391752577317, 0.061224489795918366, 0.061224489795918366, 0.061224489795918366, 0.061224489795918366, 0.061224489795918366, 0.061224489795918366, 0.061224489795918366, 0.061224489795918366, 0.061224489795918366, 0.061224489795918366, 0.061224489795918366, 0.061224489795918366, 0.061224489795918366, 0.061224489795918366, 0.071428571428571425, 0.071428571428571425, 0.071428571428571425, 0.071428571428571425, 0.071428571428571425, 0.071428571428571425, 0.071428571428571425, 0.9285714285714286, 0.071428571428571425, 0.071428571428571425, 0.081632653061224483, 0.081632653061224483, 0.081632653061224483, 0.081632653061224483, 0.081632653061224483, 0.091836734693877556, 0.091836734693877556, 0.091836734693877556, 0.091836734693877556, 0.091836734693877556, 0.10204081632653061, 0.10204081632653061, 0.10204081632653061, 0.10204081632653061, 0.10204081632653061, 0.11224489795918367, 0.11224489795918367, 0.11224489795918367, 0.88775510204081631, 0.11224489795918367, 0.11224489795918367, 0.11224489795918367, 0.87755102040816324, 0.12244897959183673, 0.1326530612244898, 0.15306122448979592, 0.16326530612244897, 0.16326530612244897, 0.16326530612244897, 0.17346938775510204, 0.17346938775510204, 0.17346938775510204, 0.18367346938775511, 0.19387755102040816, 0.21428571428571427, 0.21428571428571427, 0.21428571428571427, 0.22448979591836735, 0.22448979591836735, 0.23469387755102042, 0.23469387755102042, 0.76530612244897955, 0.24489795918367346, 0.24489795918367346, 0.25510204081632654, 0.74489795918367352, 0.25510204081632654, 0.26530612244897961, 0.26530612244897961, 0.29591836734693877, 0.30612244897959184, 0.31632653061224492, 0.31632653061224492, 0.31632653061224492, 0.33673469387755101, 0.35714285714285715, 0.36734693877551022, 0.37755102040816324, 0.37755102040816324, 0.38775510204081631, 0.38775510204081631, 0.40816326530612246, 0.40816326530612246, 0.40816326530612246, 0.40816326530612246, 0.40816326530612246, 0.41237113402061853, 0.41836734693877553, 0.41836734693877553, 0.41836734693877553, 0.41836734693877553, 0.42857142857142855, 0.42857142857142855, 0.42857142857142855, 0.42857142857142855, 0.42857142857142855, 0.42857142857142855, 0.42857142857142855, 0.42857142857142855, 0.42857142857142855, 0.42857142857142855, 0.42857142857142855, 0.4329896907216495, 0.43877551020408162, 0.43877551020408162, 0.43877551020408162, 0.43877551020408162, 0.43877551020408162, 0.43877551020408162, 0.44897959183673469, 0.44897959183673469, 0.44897959183673469, 0.44897959183673469, 0.44897959183673469, 0.44897959183673469, 0.44897959183673469, 0.44897959183673469, 0.44897959183673469, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.45918367346938777, 0.46938775510204084, 0.46938775510204084, 0.46938775510204084, 0.46938775510204084, 0.46938775510204084, 0.47959183673469385, 0.47959183673469385, 0.47959183673469385, 0.47959183673469385], &quot;mode&quot;: &quot;markers&quot;, &quot;marker&quot;: {&quot;color&quot;: &quot;rgba(219, 64, 82, 0.5)&quot;, &quot;size&quot;: 5}, &quot;x&quot;: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], &quot;type&quot;: &quot;scatter&quot;}, {&quot;name&quot;: &quot;Partisan Score&quot;, &quot;yaxis&quot;: &quot;y2&quot;, &quot;text&quot;: [&quot;Confirmation Robert Leon Wilkins, of D.C., to be U.S. Circuit Judge for the D.C. Circuit&quot;, &quot;Motion to Table the Motion to Commit S. 1845 to the Committee on Finance with Instructions&quot;, &quot;Motion to Concur in the House Amendment to S.540&quot;, &quot;On the Cloture Motion PN1184&quot;, &quot;Confirmation Theodore David Chuang, of Maryland, to be U.S. District Judge for the District of Maryland&quot;, &quot;Motion to Table the Motion to Commit S. 1982 to the Committee on Veterans' Affairs&quot;, &quot;On Cloture on the Motion to Proceed S. 2199&quot;, &quot;On the Cloture Motion PN1244&quot;, &quot;Confirmation Peter Joseph Kadzik, of New York, to be an Assistant Attorney General&quot;, &quot;Motion to Table Reid Amdt. No. 3023&quot;, &quot;Motion to Proceed to the Motion to Reconsider the Motion to Invoke Cloture on the Nomination of Robert Wilkins, to be U.S. Circuit Judge&quot;, &quot;Confirmation David Jeremiah Barron, of Massachusetts, to be U.S. Circuit Judge for the First Circuit&quot;, &quot;Motion to Table Reid Amdt. No. 2878&quot;, &quot;Motion to Table Reid Amdt. No. 3025&quot;, &quot;On the Cloture Motion S. 1845&quot;, &quot;On the Cloture Motion PN1199&quot;, &quot;On the Cloture Motion PN1196&quot;, &quot;On the Cloture Motion S.Amdt. 2631 to S. 1845 (Emergency Unemployment Compensation Extension Act)&quot;, &quot;On the Cloture Motion PN1207&quot;, &quot;Confirmation Keith M. Harper, of Maryland, for the Rank of Ambassador as U.S. Representative to the U.N. Human Rights Council&quot;, &quot;On the Cloture Motion PN1205&quot;, &quot;On the Cloture Motion PN1185&quot;, &quot;Motion to Reconsider the Motion to Invoke Cloture on the Nomination of Robert Wilkins, to be U.S. Circuit Judge&quot;, &quot;Confirmation Gustavo Velasquez Aguilar, to be Assistant Secretary of HUD&quot;, &quot;Confirmation Staci Michelle Yandle, of Illinois, to be U.S. District Judge&quot;, &quot;On the Cloture Motion PN1298&quot;, &quot;On the Cloture Motion PN1182&quot;, &quot;Confirmation John B. Owens, of California, to the U.S. Cirguit Judge for the Ninth Circuit&quot;, &quot;Confirmation Leon Rodriguez, of Maryland, to be Director of the United States Citizenship and Immigration Services&quot;, &quot;On the Cloture Motion PN1211&quot;, &quot;Motion to Waive All Applicable Budgetary Discipline Re: S.1982&quot;, &quot;On Cloture on the Motion to Proceed S. 2223&quot;, &quot;On the Cloture Motion PN1221&quot;, &quot;On the Cloture Motion PN1202&quot;, &quot;On the Cloture Motion PN1222&quot;, &quot;On the Cloture Motion PN1204&quot;, &quot;On the Cloture Motion PN1194&quot;, &quot;On the Cloture Motion PN1289&quot;, &quot;On the Cloture Motion PN1400&quot;, &quot;On the Cloture Motion PN1217&quot;, &quot;On the Cloture Motion PN1200&quot;, &quot;On the Cloture Motion PN1191&quot;, &quot;On the Cloture Motion PN1156&quot;, &quot;On the Cloture Motion PN1347&quot;, &quot;On the Cloture Motion PN1212&quot;, &quot;Confirmation David Weil, to be Administrator of the Wage and Hour Division, Department of Labor&quot;, &quot;On the Cloture Motion PN1348&quot;, &quot;On the Cloture Motion S.Amdt. 3060 to H.R. 3474 (Hire More Heroes Act of 2014)&quot;, &quot;On the Cloture Motion PN529&quot;, &quot;On the Cloture Motion PN1192&quot;, &quot;On the Cloture Motion PN1193&quot;, &quot;On the Cloture Motion PN1208&quot;, &quot;Confirmation Vince Girdhari Chhabria, of California, to be U.S. District Judge&quot;, &quot;On the Cloture Motion PN1219&quot;, &quot;On Cloture on the Motion to Proceed S. 2432&quot;, &quot;On the Cloture Motion PN1224&quot;, &quot;Motion to Table the Motion to Commit S.1845 to the Committee on Finance&quot;, &quot;On the Cloture Motion PN1717&quot;, &quot;On the Cloture Motion S.Amdt. 2714 to S. 1845 (Emergency Unemployment Compensation Extension Act)&quot;, &quot;Heller Amdt. No. 2700&quot;, &quot;Confirmation Crystal Nix-Hines, of California, to be Ambassador United Nations Educational, Scientific, and Cultural Organization&quot;, &quot;Motion to Waive All Applicable Budgetary Discipline Re: Amdt. No. 2874&quot;, &quot;On the Cloture Motion PN1227&quot;, &quot;On the Cloture Motion PN1203&quot;, &quot;Confirmation Sharon Y. Bowen, of New York, to be Commissioner of the Commodity Futures Trading Commission&quot;, &quot;On the Cloture Motion H.R. 3979&quot;, &quot;On the Cloture Motion PN1206&quot;, &quot;On the Cloture Motion PN1398&quot;, &quot;On the Cloture Motion PN1342&quot;, &quot;On the Cloture Motion PN1399&quot;, &quot;On the Cloture Motion PN1401&quot;, &quot;On the Cloture Motion PN1108&quot;, &quot;On the Cloture Motion PN1186&quot;, &quot;On the Cloture Motion S. 2262&quot;, &quot;On the Cloture Motion PN1220&quot;, &quot;On the Cloture Motion S.Amdt. 2874 to H.R. 3979 (Protecting Volunteer Firefighters and Emergency Responders Act of 2014)&quot;, &quot;Motion to Invoke Cloture on Cheryl Ann Krause, of New Jersey, to be U.S. Circuit Judge for the Third Circuit&quot;, &quot;Confirmation Michelle T. Freidland, of California, to be U.S. Circuit Judge for the Ninth Circuit&quot;, &quot;On the Cloture Motion PN1106&quot;, &quot;On the Cloture Motion PN1343&quot;, &quot;On the Cloture Motion PN1188&quot;, &quot;On the Cloture Motion PN1209&quot;, &quot;On the Cloture Motion PN1223&quot;, &quot;On the Cloture Motion PN1229&quot;, &quot;On Cloture on the Motion to Proceed S. 1845&quot;, &quot;On the Cloture Motion PN1232&quot;, &quot;Lee Amdt. No. 3380&quot;, &quot;On the Cloture Motion PN1190&quot;, &quot;On the Cloture Motion PN1183&quot;, &quot;On the Cloture Motion PN1241&quot;, &quot;On the Cloture Motion PN1350&quot;, &quot;On the Cloture Motion PN1346&quot;, &quot;H.R. 3979 As Amended&quot;, &quot;Confirmation Gerald Austin McHugh, Jr., of Pennsylvania, to be U.S. District Judge&quot;, &quot;On the Cloture Motion PN1344&quot;, &quot;Motion to Waive All Applicable Budgetary Discipline Re: S. 1926&quot;, &quot;Confirmation Rose Eilene Gottemoeller, of Virginia, to be Under Secretary of State for Arms Control and International Security&quot;, &quot;Confirmation of Richard Franklin Boulware II, of Nevada, to be United States District Judge for the District of Nevada&quot;, &quot;Confirmation Linda Vivienne Parker, of Michigan, to be U.S. District Judge for the Eastern District of Michigan&quot;, &quot;On Cloture on the Motion to Proceed H.R. 3979&quot;, &quot;On the Cloture Motion PN1197&quot;, &quot;On the Cloture Motion PN1189&quot;, &quot;On the Cloture Motion PN1215&quot;, &quot;On the Cloture Motion PN1214&quot;, &quot;On the Cloture Motion PN1218&quot;, &quot;On the Cloture Motion PN1213&quot;, &quot;On the Cloture Motion PN1233&quot;, &quot;Toomey Amdt. No. 2707 As Modified&quot;, &quot;Motion to Waive All Applicable Budgetary Discipline Re: H.R. 4302&quot;, &quot;On the Cloture Motion PN1216&quot;, &quot;On the Cloture Motion PN1181&quot;, &quot;Flake Amdt. No. 3379&quot;, &quot;On the Cloture Motion S. 540&quot;, &quot;Confirmation Janice Marion Schneider, of New York, to be an Assistant Secretary&quot;, &quot;Confirmation Lael Brainard, of the District of Columbia, to be a Member of the Board of Governors of the Federal Reserve System&quot;, &quot;On the Cloture Motion PN1612&quot;, &quot;S. 1926 As Amended&quot;, &quot;Confirmation Neil Gregory Kornze, of Nevada, to be Director of the Bureau of Land Management&quot;, &quot;Confirmation Stanley Fischer, of New York, to be a Member of the Board of Governors, Federal Reserve System&quot;, &quot;Motion to Concur in the House Amendment to the Senate Amendment to H.R. 3547&quot;, &quot;On the Cloture Motion H.R. 3547&quot;, &quot;Motion to Table the Motion to Appeal the Ruling of the Chair&quot;, &quot;Confirmation Janet L. Yellen, to be Chairman of the Board of Governors of the Federal Reserve System&quot;, &quot;Confirmation Stanley Fischer, of New York, to be Vice Chairman of the Board of Governors of the Federal Reserve System&quot;, &quot;On the Cloture Motion S. 1752&quot;, &quot;Confirmation Jerome H. Powell, of Maryland, to be a Member of the Board of Governors of the Federal Reserve System&quot;, &quot;Confirmation Jon David Levy, of Maine, to be U.S. District Judge for the District of Maine&quot;, &quot;Confirmation Wanda Felton, of New York, to be First Vice President of the Export-Import Bank of the United States&quot;, &quot;H.R. 4302&quot;, &quot;Confirmation James D. Peterson, of Wisconsin, to be U.S. District Judge&quot;, &quot;Confirmation Edward G. Smith, of Pennsylvania, to be U.S. District Judge&quot;, &quot;On Cloture on the Motion to Proceed S. 2262&quot;, &quot;Motion to Waive All Applicable Budgetary Discipline Re: H.R. 3230&quot;, &quot;H.R. 3370&quot;, &quot;Coburn Amdt. No. 2697&quot;, &quot;Confirmation Sylvia Mathews Burwell, of West Virginia, to be Secretary of Health and Human Services&quot;, &quot;On the Cloture Motion PN1210&quot;, &quot;Confirmation Douglas L. Rayes, of Arizona, to be U.S. District Judge for the District of Arizona&quot;, &quot;On Cloture on the Motion to Proceed S. 2124&quot;, &quot;Confirmation Rosemary Marquez, of Arizona, to be U.S. District Judge for the District of Arizona&quot;, &quot;Conference Report to Accompany H.R. 2642&quot;, &quot;H.J.Res. 106&quot;, &quot;On the Cloture Motion H.R. 2642&quot;, &quot;On Cloture on the Motion to Proceed S. 1926&quot;, &quot;Confirmation Richard Stengel, of New York, to be Under Secretary of State&quot;, &quot;Conference Report to Accompany H.R. 3080&quot;, &quot;Confirmation Charles Hammerman Rivkin, of DC, to be an Assistant Secretary of State&quot;, &quot;Confirmation Nancy L. Moritz, of Kansas, to be U.S. Circuit Judge for the Tenth Circuit&quot;, &quot;Franken Amdt. No. 2822&quot;, &quot;Confirmation Jeffrey Alker Meyer, of Connecticut, to be U.S. District Judge for the District of Connecticut&quot;, &quot;Confirmation Beth Labson Freeman, of California, to be U.S. District Judge for the Northern District&quot;, &quot;Confirmation Caroline Diane Krass, of the District of Columbia, to be General Counsel of the Central Intelligence Agency&quot;, &quot;H.R. 803, As Amended&quot;, &quot;Confirmation M. Douglas Harpool, of Missouri, to be U.S. District Judge&quot;, &quot;Confirmation of Robin S. Rosenbaum of Florida, to be U.S. Circuit Judge for the Eleventh Circuit&quot;, &quot;On Cloture on the Motion to Proceed S. 1963&quot;, &quot;Confirmation Cynthia Ann Bashant, of California, to be U.S. District Judge for the Southern District of California&quot;, &quot;S. 1086 As Amended&quot;, &quot;On the Cloture Motion H.R. 3474&quot;, &quot;Confirmation Mark G. Mastroianni to be U.S. District Judge for the District of Massachusetts&quot;, &quot;Confirmation Sheryl H. Lipman, of Tennessee, to be U.S. District Judge for the Western District of Tennessee&quot;, &quot;Confirmation Stanley Allen Bastian, of Washington, to be U.S. District Judge for the Eastern District of Washington&quot;, &quot;H.R. 3230, As Amended&quot;, &quot;Confirmation Sarah Sewall, of Massachusetts, to be an Under Secretary of State&quot;, &quot;Confirmation Gregg Jeffrey Costa, of Texas, to be U.S. Circuit Judge for the Fifth Circuit&quot;, &quot;Motion to Concur in the House Amendment to S.25&quot;, &quot;On the Cloture Motion H.R. 4660&quot;, &quot;Confirmation Terrell McSweeny, of the District of Columbia, to be a Federal Trade Commissioner&quot;, &quot;Confirmation James Alan Soto, of Arizona, to be U.S. District Judge for the District of Arizona&quot;, &quot;Confirmation James Maxwell Moody, Jr., of Arkansas, to be U.S. District Judge for the Eastern District&quot;, &quot;Confirmation Manish S. Shah, of Illinois, to be U.S. District Judge for the Northern District of Illinois&quot;, &quot;Confirmation Max Sieben Baucus, of Montana, to be Ambassador to the People's Republic of China&quot;, &quot;Confirmation James Donato, of California, to be U.S. District Judge for the Northern District&quot;, &quot;Menendez Amdt. No. 2867&quot;, &quot;Confirmation of M. Hannah Lauck, of Virginia, to be United States District Judge for the Eastern District&quot;, &quot;Landrieu Amdt. No. 2818&quot;, &quot;Confirmation Salvador Mendoza, Jr., of Washington, to be U.S. District Judge&quot;, &quot;Confirmation Daniel D. Crabtree, of Kansas, to be U.S. District Judge for the District of Kansas&quot;, &quot;Confirmation Pamela L. Reeves of Tennessee to be U.S. District Judge&quot;, &quot;Confirmation Catherine Ann Novelli, of VA, to be United States Alternate Governor of the International Bank for Reconstruction and Development&quot;, &quot;Confirmation, Michael L. Connor, of New Mexico, to be Deputy Secretary of the Interior&quot;, &quot;Kevin Whitaker, of Virginia, to be Ambassador Extraordinary and Plenipotentiary to the Republic of Colombia&quot;, &quot;Confirmation John P. Carlin, of New York, to be Assistant Attorney General&quot;, &quot;Confirmation of Leo T. Sorokin, of Massachusetts, to be United States District Judge for the District of Massachusetts&quot;, &quot;Confirmation Tanya S. Chutkan to be U.S. District Judge for the District of Columbia&quot;, &quot;Confirmation Bruce Howe Hendricks to be U.S. District Judge for the District of South Carolina&quot;, &quot;S. 1917&quot;, &quot;Motion to Table Amdt. No. 2631&quot;, &quot;Confirmation Tina S. Kaidanow, of D.C., to be Coordinator for Counterterrorism&quot;, &quot;Confirmation Daniel Bennett Smith, of Virginia, to be an Assistant Secretary of State&quot;, &quot;Confirmation John Joseph Tuchi, of Arizona, to be U.S. District Judge for the District of Arizona&quot;, &quot;Confirmation Darrin P. Gayles, of Florida, to be U.S. District Judge&quot;, &quot;Confirmation Laurie J. Michelson, of Michigan, to be U.S. District Judge for the Eastern District of Michigan&quot;, &quot;Confirmation Pedro A. Hernandez, of Puerto Rico, to be U.S. District Judge&quot;, &quot;Confirmation Timothy L. Brooks, of Arkansas, to be U.S. District Judge&quot;, &quot;On the Cloture Motion S. 1917&quot;, &quot;Coburn Amendment No. 2830, As Modified&quot;, &quot;Confirmation Geoffrey W. Crawford, of Vermont, to be U.S. District Judge&quot;, &quot;Confirmation Steven Paul Logan, of Arizona, to be U.S. District Judge for the District of Arizona&quot;, &quot;Confirmation Carolyn B. McHugh, of Utah, to be U.S. Circuit Judge for the Tenth Circuit&quot;, &quot;Enzi Amdt. No. 2812&quot;, &quot;Confirmation Christopher Reid Cooper, of D.C., to be U.S. District Judge for the District of Columbia&quot;, &quot;Confirmation Matthew Frederick Leitman, of Michigan, to be U.S. District Judge for the Eastern District of Michigan&quot;, &quot;Confirmation Nancy J. Rosenstengel, of Illinois, to be U.S. District Judge&quot;, &quot;Confirmation Judith Ellen Levy, of Michigan, to be U.S. District Judge for the Eastern District of Michigan&quot;, &quot;Confirmation George Jarrod Hazel, of Maryland, to be U.S. District Judge for the District of Maryland&quot;, &quot;On Cloture on the Motion to Proceed S. 1982&quot;, &quot;Confirmation Beth Bloom, of Florida, to be U.S. District Judge&quot;, &quot;Confirmation Indira Talwani, of Massachusetts, to be U.S. District Judge&quot;, &quot;Confirmation Paul G. Byron, of Florida, to be U.S. District Judge&quot;, &quot;Confirmation Diane J. Humetewa, of Arizona, to be U.S. District Judge for the District of Arizona&quot;, &quot;Confirmation Carlos Eduardo Mendoza, of Florida, to be U.S. District Judge&quot;], &quot;y&quot;: [1.0, 1.0, 1.0, 0.97959183673469385, 0.97959183673469385, 0.97959183673469385, 0.97959183673469385, 0.97959183673469385, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95918367346938771, 0.95876288659793807, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93877551020408156, 0.93814432989690721, 0.91836734693877542, 0.91836734693877542, 0.91836734693877542, 0.91836734693877542, 0.91836734693877542, 0.91836734693877542, 0.91836734693877542, 0.91836734693877542, 0.91836734693877542, 0.91836734693877542, 0.91836734693877542, 0.91752577319587636, 0.91752577319587636, 0.91752577319587636, 0.8979591836734695, 0.8979591836734695, 0.8979591836734695, 0.8979591836734695, 0.8979591836734695, 0.8979591836734695, 0.8979591836734695, 0.8979591836734695, 0.8979591836734695, 0.8979591836734695, 0.8979591836734695, 0.8979591836734695, 0.89690721649484528, 0.89690721649484528, 0.87755102040816335, 0.87755102040816335, 0.87755102040816335, 0.87755102040816335, 0.87755102040816335, 0.87755102040816335, 0.87755102040816335, 0.87755102040816335, 0.87755102040816335, 0.87755102040816335, 0.87755102040816335, 0.87755102040816335, 0.87755102040816335, 0.87755102040816335, 0.85714285714285721, 0.85714285714285721, 0.85714285714285721, 0.85714285714285721, 0.85714285714285721, 0.85714285714285721, 0.85714285714285721, 0.85714285714285721, 0.85714285714285721, 0.85714285714285721, 0.83673469387755106, 0.83673469387755106, 0.83673469387755106, 0.83673469387755106, 0.83673469387755106, 0.81632653061224492, 0.81632653061224492, 0.81632653061224492, 0.81632653061224492, 0.81632653061224492, 0.79591836734693877, 0.79591836734693877, 0.79591836734693877, 0.79591836734693877, 0.79591836734693877, 0.77551020408163263, 0.77551020408163263, 0.77551020408163263, 0.77551020408163263, 0.77551020408163263, 0.77551020408163263, 0.77551020408163263, 0.75510204081632648, 0.75510204081632648, 0.73469387755102034, 0.69387755102040827, 0.67346938775510212, 0.67346938775510212, 0.67346938775510212, 0.65306122448979598, 0.65306122448979598, 0.65306122448979598, 0.63265306122448983, 0.61224489795918369, 0.5714285714285714, 0.5714285714285714, 0.5714285714285714, 0.55102040816326525, 0.55102040816326525, 0.53061224489795911, 0.53061224489795911, 0.53061224489795911, 0.51020408163265296, 0.51020408163265296, 0.48979591836734698, 0.48979591836734698, 0.48979591836734698, 0.46938775510204084, 0.46938775510204084, 0.40816326530612246, 0.38775510204081631, 0.36734693877551017, 0.36734693877551017, 0.36734693877551017, 0.32653061224489793, 0.28571428571428575, 0.26530612244897961, 0.24489795918367352, 0.24489795918367352, 0.22448979591836737, 0.22448979591836737, 0.18367346938775508, 0.18367346938775508, 0.18367346938775508, 0.18367346938775508, 0.18367346938775508, 0.17525773195876293, 0.16326530612244894, 0.16326530612244894, 0.16326530612244894, 0.16326530612244894, 0.14285714285714285, 0.14285714285714285, 0.14285714285714285, 0.14285714285714285, 0.14285714285714285, 0.14285714285714285, 0.14285714285714285, 0.14285714285714285, 0.14285714285714285, 0.14285714285714285, 0.14285714285714285, 0.134020618556701, 0.1224489795918367, 0.1224489795918367, 0.1224489795918367, 0.1224489795918367, 0.1224489795918367, 0.1224489795918367, 0.10204081632653056, 0.10204081632653056, 0.10204081632653056, 0.10204081632653056, 0.10204081632653056, 0.10204081632653056, 0.10204081632653056, 0.10204081632653056, 0.10204081632653056, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.081632653061224525, 0.06122448979591838, 0.06122448979591838, 0.06122448979591838, 0.06122448979591838, 0.06122448979591838, 0.04081632653061229, 0.04081632653061229, 0.04081632653061229, 0.04081632653061229], &quot;marker&quot;: {&quot;color&quot;: &quot;rgba(219, 64, 82, 1)&quot;}, &quot;x&quot;: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], &quot;type&quot;: &quot;scatter&quot;}]};
  Plotly.newPlot(&quot;python-plot&quot;, python_data);
&lt;/script&gt;</content><author><name>Adam Erispaha</name></author><category term="Politics" /><category term="Tech" /><summary type="html">Inspired by this Gist</summary></entry><entry><title type="html">File Permissions for Django Media Uploads</title><link href="https://www.adamerispaha.com/2016/12/14/file-permissions-for-django-media-uploads/" rel="alternate" type="text/html" title="File Permissions for Django Media Uploads" /><published>2016-12-14T00:00:00-05:00</published><updated>2016-12-14T00:00:00-05:00</updated><id>https://www.adamerispaha.com/2016/12/14/file-permissions-for-django-media-uploads</id><content type="html" xml:base="https://www.adamerispaha.com/2016/12/14/file-permissions-for-django-media-uploads/">&lt;p&gt;After switching over a Django app’s database from the SQLite starter kit to Postgres in a production environment, something happened to my ability to read/write uploaded media files. When attempting to upload an image from within my admin panel I was met with a “Error 13 - Permission denied”. This kicked off an all day session trying to understand file permissions on Linux systems - here is what I learned and what worked for me (bare in mind I’m learning these things on the fly and am certainly no expert).&lt;/p&gt;

&lt;h2 id=&quot;users-and-groups&quot;&gt;Users and Groups&lt;/h2&gt;
&lt;p&gt;From what I understand, Unixy systems are set up in a way that allows multiple “users” to be able to interact with the computer simultaneously. This architecture was apparently born from the days where computers took up entire rooms and needed to be shared among many researchers. A permissions system was, therefore, needed in order to prevent people from messing with other users’ files.
&lt;img src=&quot;https://www.adamerispaha.com/assets/img/Ken-Thompson-and-Dennis-Ritchie-at-PDP11.jpg&quot; alt=&quot;Ken-Thompson-and-Dennis-Ritchie-at-PDP11&quot; /&gt;
As it stands now, Linux files and directories can be protected by assigning read, write, and execute permissions to specific users only. Users can also be placed in “groups” that share permissions. Users and groups with limited access will not be able to interact freely with certain files and directories. With that, it seemed that in my Django app, the [Error 13] Permission Denied was being triggered because the “user” uploading the image did not have the proper permissions to write within the target folder.&lt;/p&gt;

&lt;h2 id=&quot;unix-file-permissions-primer&quot;&gt;Unix File Permissions Primer&lt;/h2&gt;
&lt;p&gt;To understand how to fix this, I first checked out how permissions were set on my target media file on my server using the list command with more details:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; /var/www/media/ &lt;span class=&quot;c&quot;&gt;#my media folder&lt;/span&gt;
total 8
drwxr-xr-x 2 root root 4096 Oct 24 23:15 &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
drwxr-xr-x 3 root root 4096 Oct 24 23:15 ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The relevant information output from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls -la&lt;/code&gt; starts in the second row after the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;total 8&lt;/code&gt;. The second and third rows provide information related to the current directory and parent directory, respectively (signified by the trailing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;..&lt;/code&gt;). The codes within the first column define how permissions are set for the directory’s “owner”, “group”, and “other”. The first letter “d”, means that the row is a directory. Similarly, “r”, “w”, and “x” stand for read, write and execute, respectively, on that directory. After the starting “d”, the order of each trio of letters spell out the permissions for the directory’s owner, group, and other. Breaking down the first code &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;drwxr-xr-x&lt;/code&gt; into its parts we get:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;d —&amp;gt; this row is a directory&lt;/li&gt;
  &lt;li&gt;rwx —&amp;gt; read, write execute permissions for the owner&lt;/li&gt;
  &lt;li&gt;r-x —&amp;gt; read and execute permissions for the owner group (the “w” slot is empty)&lt;/li&gt;
  &lt;li&gt;r-x —&amp;gt; read and execute permissions for the other group (all other users can read and execute, but not write)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next we need to understand what users are considered the owner, owner group. This information is drawn from the third and fourth columns; in this case the owner and owner group are both root and all other users are namely “other”. Putting it all together, with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls -la&lt;/code&gt; command, we understand the following permissions of my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/www/media/&lt;/code&gt; directory:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the owner is root and has read, write execute permissions&lt;/li&gt;
  &lt;li&gt;the owner group is also root, having read and execute permissions only&lt;/li&gt;
  &lt;li&gt;all other users can read and execute&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;django-on-nginx-users&quot;&gt;Django on nginx: users&lt;/h2&gt;
&lt;p&gt;Now that we know how to see what users have permissions in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/www/media/&lt;/code&gt; directory, we need to understand which user(s) are trying to read and write. My app was set up using a Digital Ocean “one-click” Django installation on Ubuntu 14.04 on a nginx web server. nginx is like Apache in that they are web servers, and with that it (I think, I guess?) needs to define a user with set permissions on directories and files in order to serve a website.&lt;/p&gt;

&lt;p&gt;Checking out the nginx config file on my server led me to this tidbit:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vim /etc/nginx/nginx.conf

user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
        worker_connections 768;
        ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Admittedly, I don’t know what most of this file means, but the first line says user www-data which I took to mean “the nginx user is named www-data”. Googling around seemed to confirm that that was a correct assumption.&lt;/p&gt;

&lt;h2 id=&quot;changing-owners-and-permissions&quot;&gt;Changing owners and permissions&lt;/h2&gt;
&lt;p&gt;In order for my app to be able upload media files, I needed to change the permissions and owner settings. This sounded scary at first, but doesn’t have to be. &lt;a href=&quot;http://stackoverflow.com/questions/21797372/django-errno-13-permission-denied-var-www-media-animals-user-uploads?answertab=votes#answer-21797786&quot;&gt;This Stack Overflow answer&lt;/a&gt; was extremely helpful.&lt;/p&gt;

&lt;h3 id=&quot;the-easy-bad-insecure-way&quot;&gt;The easy, bad, insecure way:&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo chmod&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 777 /var/www/media/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This command changes the permissions recursively in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/www/media/&lt;/code&gt; to allow read, write, and execute for all users, including other. This would have solved the problem, but is not secure.&lt;/p&gt;

&lt;h3 id=&quot;the-better-way&quot;&gt;The better way:&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;groupadd varwwwusers
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;adduser www-data varwwwusers
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo chgrp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; varwwwusers /var/www/media/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo chmod&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 770 /var/www/media/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Step-by-step, this creates a new user group called ‘varwwwusers’, adds the user www-data to that group, changes the user group of /var/www/media/ to ‘varwwwusers’ and finally changes the owner privileges to 770 which allows read, write and, execute rights to the owner (root) and owner group (varwwwusers) with no access rights to anyone else. Because www-data was added to the varwwwusers group, www-data can now read and write.&lt;/p&gt;

&lt;p&gt;With that, I fired up my app and eagerly sent an image file upload to the media directory only to run into the same [Error 13] permission denied. Desperately, I pulled out the foolish &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo chmod -R 777 /var/www/media/&lt;/code&gt; and tried again, this time with success (of course). When I inspected the uploaded file, I found this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; /var/www/media/ &lt;span class=&quot;c&quot;&gt;#my media folder&lt;/span&gt;
total 8
drwxrwxrwx 2 root    varwwwusers 4096  Oct 24 23:15 &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
drwxr-xr-x 3 root    root        4096  Oct 24 23:15 ..
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 django  django      77105 Oct 26 20:54 cool_upload.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So, it seemed that my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cool_upload.jpg&lt;/code&gt; file was being taken by Django magic and written to my media folder as the user “django”. With that in mind, I had only a few more steps wrap things up.&lt;/p&gt;

&lt;p&gt;First, I added the user ‘django’ to the ‘varwwwusers’ group and changed the permissions back to 770:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;adduser django varwwwusers
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo chmod&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 770 /var/www/media/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This means that directories with the owner group varwwwusers can sharedprivileges with django.
Finally, to make new files uploaded by django hand-off group ownership to varwwwusers, I needed to do this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;g+s /var/www/media
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which sets the group id for all new files within my media folder.&lt;/p&gt;

&lt;p&gt;After restarting nginx and Gunicorn, BOOM my app was ready to upload with fancy file permissions and without a gaping security hole. With that, my first Linux file permissions journey was complete.&lt;/p&gt;

&lt;p&gt;If I missed anything or misspoke (which is very likely), please let me know.&lt;/p&gt;</content><author><name>Adam Erispaha</name></author><category term="Tech" /><summary type="html">After switching over a Django app’s database from the SQLite starter kit to Postgres in a production environment, something happened to my ability to read/write uploaded media files. When attempting to upload an image from within my admin panel I was met with a “Error 13 - Permission denied”. This kicked off an all day session trying to understand file permissions on Linux systems - here is what I learned and what worked for me (bare in mind I’m learning these things on the fly and am certainly no expert). Users and Groups From what I understand, Unixy systems are set up in a way that allows multiple “users” to be able to interact with the computer simultaneously. This architecture was apparently born from the days where computers took up entire rooms and needed to be shared among many researchers. A permissions system was, therefore, needed in order to prevent people from messing with other users’ files. As it stands now, Linux files and directories can be protected by assigning read, write, and execute permissions to specific users only. Users can also be placed in “groups” that share permissions. Users and groups with limited access will not be able to interact freely with certain files and directories. With that, it seemed that in my Django app, the [Error 13] Permission Denied was being triggered because the “user” uploading the image did not have the proper permissions to write within the target folder. Unix File Permissions Primer To understand how to fix this, I first checked out how permissions were set on my target media file on my server using the list command with more details: $ ls -la /var/www/media/ #my media folder total 8 drwxr-xr-x 2 root root 4096 Oct 24 23:15 . drwxr-xr-x 3 root root 4096 Oct 24 23:15 .. The relevant information output from ls -la starts in the second row after the total 8. The second and third rows provide information related to the current directory and parent directory, respectively (signified by the trailing . and ..). The codes within the first column define how permissions are set for the directory’s “owner”, “group”, and “other”. The first letter “d”, means that the row is a directory. Similarly, “r”, “w”, and “x” stand for read, write and execute, respectively, on that directory. After the starting “d”, the order of each trio of letters spell out the permissions for the directory’s owner, group, and other. Breaking down the first code drwxr-xr-x into its parts we get: d —&amp;gt; this row is a directory rwx —&amp;gt; read, write execute permissions for the owner r-x —&amp;gt; read and execute permissions for the owner group (the “w” slot is empty) r-x —&amp;gt; read and execute permissions for the other group (all other users can read and execute, but not write) Next we need to understand what users are considered the owner, owner group. This information is drawn from the third and fourth columns; in this case the owner and owner group are both root and all other users are namely “other”. Putting it all together, with the ls -la command, we understand the following permissions of my /var/www/media/ directory: the owner is root and has read, write execute permissions the owner group is also root, having read and execute permissions only all other users can read and execute Django on nginx: users Now that we know how to see what users have permissions in the /var/www/media/ directory, we need to understand which user(s) are trying to read and write. My app was set up using a Digital Ocean “one-click” Django installation on Ubuntu 14.04 on a nginx web server. nginx is like Apache in that they are web servers, and with that it (I think, I guess?) needs to define a user with set permissions on directories and files in order to serve a website. Checking out the nginx config file on my server led me to this tidbit: $ vim /etc/nginx/nginx.conf user www-data; worker_processes 4; pid /run/nginx.pid; events { worker_connections 768; ... Admittedly, I don’t know what most of this file means, but the first line says user www-data which I took to mean “the nginx user is named www-data”. Googling around seemed to confirm that that was a correct assumption. Changing owners and permissions In order for my app to be able upload media files, I needed to change the permissions and owner settings. This sounded scary at first, but doesn’t have to be. This Stack Overflow answer was extremely helpful. The easy, bad, insecure way: $ sudo chmod -R 777 /var/www/media/ This command changes the permissions recursively in /var/www/media/ to allow read, write, and execute for all users, including other. This would have solved the problem, but is not secure. The better way: $ sudo groupadd varwwwusers $ sudo adduser www-data varwwwusers $ sudo chgrp -R varwwwusers /var/www/media/ $ sudo chmod -R 770 /var/www/media/ Step-by-step, this creates a new user group called ‘varwwwusers’, adds the user www-data to that group, changes the user group of /var/www/media/ to ‘varwwwusers’ and finally changes the owner privileges to 770 which allows read, write and, execute rights to the owner (root) and owner group (varwwwusers) with no access rights to anyone else. Because www-data was added to the varwwwusers group, www-data can now read and write. With that, I fired up my app and eagerly sent an image file upload to the media directory only to run into the same [Error 13] permission denied. Desperately, I pulled out the foolish sudo chmod -R 777 /var/www/media/ and tried again, this time with success (of course). When I inspected the uploaded file, I found this: $ ls -la /var/www/media/ #my media folder total 8 drwxrwxrwx 2 root varwwwusers 4096 Oct 24 23:15 . drwxr-xr-x 3 root root 4096 Oct 24 23:15 .. -rw-r--r-- 1 django django 77105 Oct 26 20:54 cool_upload.jpg So, it seemed that my cool_upload.jpg file was being taken by Django magic and written to my media folder as the user “django”. With that in mind, I had only a few more steps wrap things up. First, I added the user ‘django’ to the ‘varwwwusers’ group and changed the permissions back to 770: $ sudo adduser django varwwwusers $ sudo chmod -R 770 /var/www/media/ This means that directories with the owner group varwwwusers can sharedprivileges with django. Finally, to make new files uploaded by django hand-off group ownership to varwwwusers, I needed to do this: $ chmod g+s /var/www/media which sets the group id for all new files within my media folder. After restarting nginx and Gunicorn, BOOM my app was ready to upload with fancy file permissions and without a gaping security hole. With that, my first Linux file permissions journey was complete. If I missed anything or misspoke (which is very likely), please let me know.</summary></entry></feed>